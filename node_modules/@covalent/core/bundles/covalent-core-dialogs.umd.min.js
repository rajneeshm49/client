!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/material/dialog"),require("@angular/common"),require("@angular/forms"),require("@angular/material/input"),require("@angular/material/button")):"function"==typeof define&&define.amd?define("@covalent/core/dialogs",["exports","@angular/core","@angular/material/dialog","@angular/common","@angular/forms","@angular/material/input","@angular/material/button"],o):o((t.covalent=t.covalent||{},t.covalent.core=t.covalent.core||{},t.covalent.core.dialogs={}),t.ng.core,t.ng.material.dialog,t.ng.common,t.ng.forms,t.ng.material.input,t.ng.material.button)}(this,function(t,o,e,n,i,a,r){"use strict";var l=function(){};l.decorators=[{type:o.Directive,args:[{selector:"td-dialog-title"}]}],l.ctorParameters=function(){return[]};var c=function(){};c.decorators=[{type:o.Directive,args:[{selector:"td-dialog-content"}]}],c.ctorParameters=function(){return[]};var d=function(){};d.decorators=[{type:o.Directive,args:[{selector:"td-dialog-actions"}]}],d.ctorParameters=function(){return[]};var s=function(){function t(){}return t.prototype.ngAfterContentInit=function(){if(1<this.dialogTitle.length)throw new Error("Duplicate td-dialog-title component at in td-dialog.");if(1<this.dialogContent.length)throw new Error("Duplicate td-dialog-content component at in td-dialog.");if(1<this.dialogActions.length)throw new Error("Duplicate td-dialog-actions component at in td-dialog.")},t}();s.decorators=[{type:o.Component,args:[{selector:"td-dialog",template:'<div class="td-dialog-wrapper">\n  <h3 class="td-dialog-title" *ngIf="dialogTitle.length > 0">\n    <ng-content select="td-dialog-title"></ng-content>\n  </h3>\n  <div class="td-dialog-content" *ngIf="dialogContent.length > 0">\n    <ng-content select="td-dialog-content"></ng-content>\n  </div>\n  <div class="td-dialog-actions" *ngIf="dialogActions.length > 0">\n    <span class="td-dialog-spacer"></span>\n    <ng-content select="td-dialog-actions"></ng-content>\n  </div>\n</div>',styles:[".td-dialog-title{margin-top:0;margin-bottom:20px}.td-dialog-content{margin-bottom:16px}.td-dialog-actions{position:relative;top:16px;left:16px}::ng-deep [dir=rtl] .td-dialog-actions{right:16px;left:auto}:host{display:block}:host .td-dialog-actions{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex}:host .td-dialog-actions .td-dialog-spacer{-webkit-box-flex:1;-ms-flex:1;flex:1}:host .td-dialog-actions ::ng-deep button{text-transform:uppercase;margin-left:8px;padding-left:8px;padding-right:8px;min-width:64px}[dir=rtl] :host .td-dialog-actions ::ng-deep button{margin-right:8px;margin-left:inherit}"]}]}],s.ctorParameters=function(){return[]},s.propDecorators={dialogTitle:[{type:o.ContentChildren,args:[l]}],dialogContent:[{type:o.ContentChildren,args:[c]}],dialogActions:[{type:o.ContentChildren,args:[d]}]};var g=function(){function t(t){this._dialogRef=t,this.closeButton="CLOSE"}return t.prototype.close=function(){this._dialogRef.close()},t}();g.decorators=[{type:o.Component,args:[{selector:"td-alert-dialog",template:'<td-dialog>\n  <td-dialog-title *ngIf="title">\n    {{title}}\n  </td-dialog-title>\n  <td-dialog-content>\n    <span class="td-dialog-message">{{message}}</span>\n  </td-dialog-content>\n  <td-dialog-actions>\n    <button mat-button color="accent" (click)="close()">{{closeButton}}</button>\n  </td-dialog-actions>\n</td-dialog>',styles:[".td-dialog-message{word-break:break-word}"]}]}],g.ctorParameters=function(){return[{type:e.MatDialogRef}]};var p=function(){function t(t){this._dialogRef=t,this.cancelButton="CANCEL",this.acceptButton="ACCEPT"}return t.prototype.cancel=function(){this._dialogRef.close(!1)},t.prototype.accept=function(){this._dialogRef.close(!0)},t}();p.decorators=[{type:o.Component,args:[{selector:"td-confirm-dialog",template:'<td-dialog>\n  <td-dialog-title *ngIf="title">\n    {{title}}\n  </td-dialog-title>\n  <td-dialog-content>\n    <span class="td-dialog-message">{{message}}</span>\n  </td-dialog-content>\n  <td-dialog-actions>\n    <button mat-button\n            #closeBtn \n            (keydown.arrowright)="acceptBtn.focus()"\n            (click)="cancel()">{{cancelButton}}</button>\n    <button mat-button\n            color="accent"\n            #acceptBtn\n            (keydown.arrowleft)="closeBtn.focus()"\n            (click)="accept()">{{acceptButton}}</button>\n  </td-dialog-actions>\n</td-dialog>',styles:[".td-dialog-message{word-break:break-word}"]}]}],p.ctorParameters=function(){return[{type:e.MatDialogRef}]};var u=function(){function t(t){this._dialogRef=t,this.cancelButton="CANCEL",this.acceptButton="ACCEPT"}return t.prototype.ngAfterViewInit=function(){var t=this;Promise.resolve().then(function(){t._input.nativeElement.focus()})},t.prototype.handleInputFocus=function(){this._input.nativeElement.select()},t.prototype.cancel=function(){this._dialogRef.close(undefined)},t.prototype.accept=function(){this._dialogRef.close(this.value)},t}();u.decorators=[{type:o.Component,args:[{selector:"td-prompt-dialog",template:'<td-dialog>\n  <td-dialog-title *ngIf="title">\n    {{title}}\n  </td-dialog-title>\n  <td-dialog-content>\n    <span class="td-dialog-message">{{message}}</span>\n    <form #form="ngForm" novalidate>\n      <div class="td-dialog-input-wrapper">\n        <mat-form-field class="td-dialog-input">\n          <input matInput\n                #input\n                (focus)="handleInputFocus()"\n                (keydown.enter)="$event.preventDefault(); form.valid && accept()"\n                [(ngModel)]="value"\n                name="value"\n                required/>\n        </mat-form-field>\n      </div>\n    </form>\n  </td-dialog-content>\n  <td-dialog-actions>\n    <button mat-button\n            #closeBtn \n            (keydown.arrowright)="acceptBtn.focus()"\n            (click)="cancel()">{{cancelButton}}</button>\n    <button mat-button\n            color="accent"\n            #acceptBtn\n            (keydown.arrowleft)="closeBtn.focus()"\n            [disabled]="!form.valid"\n            (click)="accept()">{{acceptButton}}</button>\n  </td-dialog-actions>\n</td-dialog>',styles:[".td-dialog-input-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex}.td-dialog-input-wrapper .td-dialog-input{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dialog-message{word-break:break-word}"]}]}],u.ctorParameters=function(){return[{type:e.MatDialogRef}]},u.propDecorators={_input:[{type:o.ViewChild,args:["input"]}]};var f=function(){function t(t){this._dialogService=t}return t.prototype.open=function(t,o){return this._dialogService.open(t,o)},t.prototype.closeAll=function(){this._dialogService.closeAll()},t.prototype.openAlert=function(t){var o=this._createConfig(t),e=this._dialogService.open(g,o),n=e.componentInstance;return n.title=t.title,n.message=t.message,t.closeButton&&(n.closeButton=t.closeButton),e},t.prototype.openConfirm=function(t){var o=this._createConfig(t),e=this._dialogService.open(p,o),n=e.componentInstance;return n.title=t.title,n.message=t.message,t.acceptButton&&(n.acceptButton=t.acceptButton),t.cancelButton&&(n.cancelButton=t.cancelButton),e},t.prototype.openPrompt=function(t){var o=this._createConfig(t),e=this._dialogService.open(u,o),n=e.componentInstance;return n.title=t.title,n.message=t.message,n.value=t.value,t.acceptButton&&(n.acceptButton=t.acceptButton),t.cancelButton&&(n.cancelButton=t.cancelButton),e},t.prototype._createConfig=function(t){var o=new e.MatDialogConfig;return o.width="400px",Object.assign(o,t),o},t}();function m(t,o){return t||new f(o)}f.decorators=[{type:o.Injectable}],f.ctorParameters=function(){return[{type:e.MatDialog}]};var b={provide:f,deps:[[new o.Optional,new o.SkipSelf,f],e.MatDialog],useFactory:m},h=[g,p,u,s,l,d,c],v=[g,p,u],y=function(){};y.decorators=[{type:o.NgModule,args:[{imports:[i.FormsModule,n.CommonModule,e.MatDialogModule,a.MatInputModule,r.MatButtonModule],declarations:[h],exports:[h],providers:[b],entryComponents:[v]}]}],y.ctorParameters=function(){return[]},t.CovalentDialogsModule=y,t.TdDialogTitleDirective=l,t.TdDialogContentDirective=c,t.TdDialogActionsDirective=d,t.TdDialogComponent=s,t.TdAlertDialogComponent=g,t.TdConfirmDialogComponent=p,t.TdPromptDialogComponent=u,t.TdDialogService=f,t.DIALOG_PROVIDER_FACTORY=m,t.DIALOG_PROVIDER=b,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=covalent-core-dialogs.umd.min.js.map
