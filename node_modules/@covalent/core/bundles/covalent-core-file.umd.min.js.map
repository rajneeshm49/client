{
  "version": 3,
  "file": "covalent-core-file.umd.min.js",
  "sources": [
    "ng://@covalent/core/file/node_modules/tslib/tslib.es6.js",
    "ng://@covalent/core/file/out/directives/file-select.directive.ts",
    "ng://@covalent/core/file/out/directives/file-drop.directive.ts",
    "ng://@covalent/core/file/out/file-input/file-input.component.ts",
    "ng://@covalent/core/file/out/file-upload/file-upload.component.ts",
    "ng://@covalent/core/file/out/services/file.service.ts",
    "ng://@covalent/core/file/out/file.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, Host, Optional } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdFileSelect]',\n})\nexport class TdFileSelectDirective {\n\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be selected at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileSelect?: function\n   * Event emitted when a file or files are selected in host [HTMLInputElement].\n   * Emits a [FileList | File] object.\n   * Alternative to not use [(ngModel)].\n   */\n  @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  constructor(@Optional() @Host() private model: NgModel) {\n  }\n\n  /**\n   * Listens to 'change' host event to get [HTMLInputElement] files.\n   * Emits the 'onFileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Uses [(ngModel)] if declared, instead of emitting 'onFileSelect' event.\n   */\n  @HostListener('change', ['$event'])\n  onChange(event: Event): void {\n    if (event.target instanceof HTMLInputElement) {\n      let fileInputEl: HTMLInputElement = (<HTMLInputElement>event.target);\n      let files: FileList = fileInputEl.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);\n      }\n    }\n  }\n}\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nexport class TdFileDropBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\n\n@Directive({\n  selector: '[tdFileDrop]',\n  inputs: ['disabled'],\n})\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\n\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileDrop?: function\n   * Event emitted when a file or files are dropped in host element after being validated.\n   * Emits a [FileList | File] object.\n   */\n  @Output('fileDrop') onFileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  /**\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\n   */\n  @HostBinding('attr.disabled')\n  get disabledBinding(): string {\n    return this.disabled ? '' : undefined;\n  }\n\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\n    super();\n  }\n\n  /**\n   * Listens to 'drop' host event to get validated transfer items.\n   * Emits the 'onFileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Stops event propagation and default action from browser for 'drop' event.\n   */\n  @HostListener('drop', ['$event'])\n  onDrop(event: Event): void {\n    if (!this.disabled) {\n      let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n      let files: FileList = transfer.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.onFileDrop.emit(value);\n      }\n    }\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragover' host event to validate transfer items.\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\n   * Stops event propagation and default action from browser for 'dragover' event.\n   */\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: Event): void {\n    let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n    transfer.dropEffect = this._typeCheck(transfer.types);\n    if (this.disabled || (!this._multiple &&\n      ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {\n      transfer.dropEffect = 'none';\n    } else {\n      transfer.dropEffect = 'copy';\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\n   * Stops event propagation and default action from browser for 'dragenter' event.\n   */\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(event: Event): void {\n    if (!this.disabled) {\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\n   * Stops event propagation and default action from browser for 'dragleave' event.\n   */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: Event): void {\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Validates if the transfer item types are 'Files'.\n   */\n  private _typeCheck(types: string[] | DOMStringList): string {\n    let dropEffect: string = 'none';\n    if (types) {\n      if (((<any>types).contains && (<any>types).contains('Files'))\n      || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {\n        dropEffect = 'copy';\n      }\n    }\n    return dropEffect;\n  }\n\n  private _stopEvent(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n",
    "import { Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild,\n         ElementRef, Renderer2, TemplateRef, ViewContainerRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-file-input-label]ng-template',\n})\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdFileInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdFileInputComponent),\n    multi: true,\n  }],\n  selector: 'td-file-input',\n  inputs: ['disabled', 'value'],\n  styles: [`:host .td-file-input{padding-left:8px;padding-right:8px}:host input.td-file-input-hidden{display:none}:host .drop-zone{border-radius:3px}:host .drop-zone *{pointer-events:none}`],\n  template: `<div>\n  <button mat-raised-button\n          class=\"td-file-input\"\n          type=\"button\"\n          [color]=\"color\" \n          [multiple]=\"multiple\" \n          [disabled]=\"disabled\"\n          (keyup.enter)=\"fileInput.click()\"\n          (click)=\"fileInput.click()\"\n          (fileDrop)=\"handleSelect($event)\"\n          tdFileDrop>\n    <ng-content></ng-content>\n  </button>\n  <input #fileInput \n          class=\"td-file-input-hidden\" \n          type=\"file\"\n          [attr.accept]=\"accept\"                \n          (fileSelect)=\"handleSelect($event)\"\n          [multiple]=\"multiple\" \n          [disabled]=\"disabled\"\n          tdFileSelect>\n</div>`,\n})\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {\n\n  private _multiple: boolean = false;\n\n  /** The native `<input type=\"file\"> element */\n  @ViewChild('fileInput') _inputElement: ElementRef;\n  get inputElement(): HTMLInputElement {\n    return this._inputElement.nativeElement;\n  }\n\n  /**\n   * color?: string\n   * Sets button color. Uses same color palette accepted as [MatButton].\n   */\n  @Input('color') color: string;\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted a file is selected\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.writeValue(files);\n    this.onSelect.emit(files);\n  }\n\n  /**\n   * Used to clear the selected files from the [TdFileInputComponent].\n   */\n  clear(): void {\n    this.writeValue(undefined);\n    this._renderer.setProperty(this.inputElement, 'value', '');\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.clear();\n    }\n  }\n\n}\n",
    "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild, ContentChild, ChangeDetectorRef,\n  forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport class TdFileUploadBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdFileUploadComponent),\n    multi: true,\n  }],\n  selector: 'td-file-upload',\n  inputs: ['disabled', 'value'],\n  styles: [`.td-file-upload{padding-left:8px;padding-right:8px}.td-file-upload-cancel{height:24px;width:24px;position:relative;top:24px;left:-12px}::ng-deep [dir=rtl] .td-file-upload-cancel{right:-12px;left:0}.td-file-upload-cancel mat-icon{border-radius:12px;vertical-align:baseline}.drop-zone{border-radius:3px}.drop-zone *{pointer-events:none}`],\n  template: `<td-file-input *ngIf=\"!value\"\n               [(ngModel)]=\"value\"\n               [multiple]=\"multiple\"\n               [disabled]=\"disabled\"\n               [accept]=\"accept\"\n               [color]=\"defaultColor\"\n               (select)=\"handleSelect($event)\">\n  <ng-template [cdkPortalOutlet]=\"inputLabel\" [ngIf]=\"true\"></ng-template>\n</td-file-input>\n<div *ngIf=\"value\">\n  <button #fileUpload\n          class=\"td-file-upload\"\n          mat-raised-button\n          type=\"button\"\n          [color]=\"activeColor\"\n          (keyup.delete)=\"cancel()\"\n          (keyup.backspace)=\"cancel()\"\n          (keyup.escape)=\"cancel()\"\n          (click)=\"uploadPressed()\"> \n    <ng-content></ng-content>\n  </button>\n  <button mat-icon-button\n          type=\"button\"\n          class=\"td-file-upload-cancel\"\n          [color]=\"cancelColor\"            \n          (click)=\"cancel()\">\n    <mat-icon>cancel</mat-icon>\n  </button>\n</div>`,\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {\n\n  private _multiple: boolean = false;\n  private _required: boolean = false;\n\n  @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: string\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input('defaultColor') defaultColor: string = 'primary';\n\n  /**\n   * activeColor?: string\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input('activeColor') activeColor: string = 'accent';\n\n  /**\n   * cancelColor?: string\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input('cancelColor') cancelColor: string = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * required?: boolean\n   * Forces at least one file upload.\n   * Defaults to 'false'\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.value) {\n      this.onUpload.emit(this.value);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(value: File | FileList): void {\n    this.value = value;\n    this.onSelect.emit(value);\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.value = undefined;\n    this.onCancel.emit(undefined);\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.cancel();\n    }\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { Observable, Subject, Subscriber } from 'rxjs';\n\nexport interface IUploadOptions {\n  url: string;\n  method: 'post' | 'put';\n  file?: File;\n  headers?: {[key: string]: string};\n  formData?: FormData;\n}\n\n@Injectable()\nexport class TdFileService {\n\n  private _progressSubject: Subject<number> = new Subject<number>();\n  private _progressObservable: Observable<number>;\n\n  /**\n   * Gets progress observable to keep track of the files being uploaded.\n   * Needs to be supported by backend.\n   */\n  get progress(): Observable<number> {\n    return this._progressObservable;\n  }\n\n  constructor() {\n    this._progressObservable = this._progressSubject.asObservable();\n  }\n\n  /**\n   * params:\n   * - options: IUploadOptions {\n   *     url: string,\n   *     method: 'post' | 'put',\n   *     file?: File,\n   *     headers?: {[key: string]: string},\n   *     formData?: FormData\n   * }\n   *\n   * Uses underlying [XMLHttpRequest] to upload a file to a url.\n   * Will be depricated when Angular fixes [Http] to allow [FormData] as body.\n   */\n  upload(options: IUploadOptions): Observable<any> {\n    return new Observable<any>((subscriber: Subscriber<any>) => {\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\n      let formData: FormData = new FormData();\n\n      if (options.file !== undefined) {\n        formData.append('file', options.file);\n      } else if (options.formData !== undefined) {\n        formData = options.formData;\n      } else {\n        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');\n      }\n\n      xhr.upload.onprogress = (event: ProgressEvent) => {\n        let progress: number = 0;\n        if (event.lengthComputable) {\n          progress = Math.round(event.loaded / event.total * 100);\n        }\n        this._progressSubject.next(progress);\n      };\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            subscriber.next(xhr.response);\n            subscriber.complete();\n          } else {\n            subscriber.error(xhr.response);\n          }\n        }\n      };\n\n      xhr.open(options.method, options.url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      if (options.headers) {\n        for (let key in options.headers) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        }\n      }\n\n      xhr.send(formData);\n    });\n  }\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdFileSelectDirective } from './directives/file-select.directive';\nimport { TdFileDropDirective } from './directives/file-drop.directive';\nimport { TdFileUploadComponent } from './file-upload/file-upload.component';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';\nimport { TdFileService } from './services/file.service';\n\nconst TD_FILE: Type<any>[] = [\n  TdFileSelectDirective,\n  TdFileDropDirective,\n  TdFileUploadComponent,\n  TdFileInputComponent,\n  TdFileInputLabelDirective,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_FILE,\n  ],\n  exports: [\n    TD_FILE,\n  ],\n  providers: [\n    TdFileService,\n  ],\n})\nexport class CovalentFileModule {\n\n}\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__extends",
    "__",
    "this",
    "constructor",
    "prototype",
    "create",
    "TdFileSelectDirective",
    "model",
    "_multiple",
    "onFileSelect",
    "EventEmitter",
    "defineProperty",
    "set",
    "multiple",
    "coerceBooleanProperty",
    "get",
    "undefined",
    "onChange",
    "event",
    "target",
    "HTMLInputElement",
    "files",
    "length",
    "value",
    "update",
    "emit",
    "type",
    "Directive",
    "args",
    "selector",
    "NgModel",
    "decorators",
    "Optional",
    "Host",
    "Input",
    "Output",
    "multipleBinding",
    "HostBinding",
    "HostListener",
    "TdFileDropBase",
    "_TdFileDropMixinBase",
    "mixinDisabled",
    "TdFileDropDirective",
    "_super",
    "_renderer",
    "_element",
    "_this",
    "call",
    "onFileDrop",
    "tslib_1.__extends",
    "disabled",
    "onDrop",
    "dataTransfer",
    "removeClass",
    "nativeElement",
    "_stopEvent",
    "onDragOver",
    "transfer",
    "dropEffect",
    "_typeCheck",
    "types",
    "items",
    "mozItemCount",
    "onDragEnter",
    "addClass",
    "onDragLeave",
    "contains",
    "indexOf",
    "preventDefault",
    "stopPropagation",
    "inputs",
    "Renderer2",
    "ElementRef",
    "disabledBinding",
    "TdFileInputLabelDirective",
    "templateRef",
    "viewContainerRef",
    "TemplatePortalDirective",
    "TemplateRef",
    "ViewContainerRef",
    "TdFileInputBase",
    "_changeDetectorRef",
    "_TdFileInputMixinBase",
    "mixinControlValueAccessor",
    "TdFileInputComponent",
    "onSelect",
    "_inputElement",
    "handleSelect",
    "writeValue",
    "clear",
    "setProperty",
    "inputElement",
    "onDisabledChange",
    "v",
    "Component",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "providers",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "multi",
    "styles",
    "template",
    "ChangeDetectorRef",
    "ViewChild",
    "color",
    "accept",
    "TdFileUploadBase",
    "_TdFileUploadMixinBase",
    "TdFileUploadComponent",
    "_required",
    "defaultColor",
    "activeColor",
    "cancelColor",
    "onUpload",
    "onCancel",
    "required",
    "uploadPressed",
    "cancel",
    "fileInput",
    "inputLabel",
    "ContentChild",
    "TdFileService",
    "_progressSubject",
    "Subject",
    "_progressObservable",
    "asObservable",
    "upload",
    "options",
    "Observable",
    "subscriber",
    "xhr",
    "XMLHttpRequest",
    "formData",
    "FormData",
    "file",
    "append",
    "error",
    "onprogress",
    "progress",
    "lengthComputable",
    "Math",
    "round",
    "loaded",
    "total",
    "next",
    "onreadystatechange",
    "readyState",
    "status",
    "response",
    "complete",
    "open",
    "method",
    "url",
    "setRequestHeader",
    "headers",
    "key",
    "send",
    "Injectable",
    "TD_FILE",
    "CovalentFileModule",
    "NgModule",
    "imports",
    "FormsModule",
    "CommonModule",
    "MatIconModule",
    "MatButtonModule",
    "PortalModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
