{
  "version": 3,
  "file": "covalent-core-layout.umd.min.js",
  "sources": [
    "ng://@covalent/core/layout/node_modules/tslib/tslib.es6.js",
    "ng://@covalent/core/layout/out/layout.component.ts",
    "ng://@covalent/core/layout/out/layout-toggle.class.ts",
    "ng://@covalent/core/layout/out/layout.directives.ts",
    "ng://@covalent/core/layout/out/layout-nav/layout-nav.component.ts",
    "ng://@covalent/core/layout/out/layout-nav-list/layout-nav-list.component.ts",
    "ng://@covalent/core/layout/out/layout-nav-list/layout-nav-list.directives.ts",
    "ng://@covalent/core/layout/out/layout-card-over/layout-card-over.component.ts",
    "ng://@covalent/core/layout/out/layout-manage-list/layout-manage-list.component.ts",
    "ng://@covalent/core/layout/out/layout-manage-list/layout-manage-list.directives.ts",
    "ng://@covalent/core/layout/out/layout-footer/layout-footer.component.ts",
    "ng://@covalent/core/layout/out/navigation-drawer/navigation-drawer.component.ts",
    "ng://@covalent/core/layout/out/layout.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styles: [`:host{display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;width:100%;min-height:100%;height:100%;overflow:hidden}:host ::ng-deep>mat-sidenav-container>mat-sidenav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}`],\n  template: `<mat-sidenav-container fullscreen>\n  <mat-sidenav #sidenav\n              class=\"td-layout-sidenav\"\n              [mode]=\"mode\"\n              [opened]=\"opened\"\n              [style.max-width]=\"sidenavWidth\"\n              [style.min-width]=\"sidenavWidth\"\n              [disableClose]=\"disableClose\">\n    <ng-content select=\"td-navigation-drawer\"></ng-content>\n    <ng-content select=\"[td-sidenav-content]\"></ng-content>\n  </mat-sidenav>\n  <ng-content></ng-content>\n</mat-sidenav-container>\n`,\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '320px';\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n",
    "import { Input, HostBinding, HostListener, Renderer2, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<MatDrawerToggleResult>;\n  open(): Promise<MatDrawerToggleResult>;\n  close(): Promise<MatDrawerToggleResult>;\n}\n\nexport class LayoutToggleBase { }\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\nexport abstract class LayoutToggle extends _TdLayoutToggleMixinBase implements AfterViewInit, OnDestroy, ICanDisable {\n\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable,\n              private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    super();\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n      this._toggleVisibility();\n    });\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      this.onClick();\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout.sidenav.opened && this._hideWhenOpened) {\n      this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n    } else {\n      this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n    }\n  }\n\n}\n",
    "import { Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { LayoutToggle } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutToggle') \n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutClose') \n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutOpen') \n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n",
    "import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styles: [`.td-menu-button{margin-left:0}::ng-deep [dir=rtl] .td-menu-button{margin-right:0;margin-left:6px}:host{display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;width:100%;min-height:100%;height:100%;overflow:hidden}:host .td-layout-nav-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;width:100%;min-height:100%;height:100%}:host .td-layout-nav-wrapper .td-layout-nav-toolbar-content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}:host .td-layout-nav-wrapper .td-layout-nav-content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1;position:relative;overflow:auto;-webkit-overflow-scrolling:touch}`],\n  template: `<div class=\"td-layout-nav-wrapper\">\n  <mat-toolbar [color]=\"color\">\n    <ng-content select=\"[td-menu-button]\"></ng-content>\n    <span *ngIf=\"icon || logo || toolbarTitle\"\n          [class.cursor-pointer]=\"routerEnabled\"\n          (click)=\"handleNavigationClick()\"\n          class=\"td-layout-nav-toolbar-content\">\n      <mat-icon *ngIf=\"icon\">{{icon}}</mat-icon>\n      <mat-icon *ngIf=\"logo && !icon\" class=\"mat-icon-logo\" [svgIcon]=\"logo\"></mat-icon>\n      <span *ngIf=\"toolbarTitle\">{{toolbarTitle}}</span>\n    </span>\n    <ng-content select=\"[td-toolbar-content]\"></ng-content>\n  </mat-toolbar>\n  <div class=\"td-layout-nav-content\" cdkScrollable>\n    <ng-content></ng-content>\n  </div>\n  <ng-content select=\"td-layout-footer\"></ng-content>\n</div>\n`,\n})\nexport class TdLayoutNavComponent {\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n",
    "import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styles: [`:host{margin:0;width:100%;min-height:100%;height:100%;overflow:hidden;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1}:host .td-layout-nav-list-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1;position:relative;overflow:auto;-webkit-overflow-scrolling:touch}:host .td-layout-nav-list-wrapper .td-layout-nav-list-toolbar-content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}:host .td-layout-nav-list-wrapper .td-layout-nav-list-content{text-align:start;-webkit-box-flex:1;-ms-flex:1;flex:1;display:block;position:relative;overflow:auto;-webkit-overflow-scrolling:touch}:host .td-layout-nav-list-wrapper .td-layout-nav-list-main{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;width:100%;min-height:100%;height:100%;position:relative;overflow:auto}:host .td-layout-nav-list-wrapper .td-layout-nav-list-main .td-layout-nav-list-content{display:block;position:relative;overflow:auto;-webkit-overflow-scrolling:touch;-webkit-box-flex:1;-ms-flex:1;flex:1}:host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list{-webkit-box-flex:1;-ms-flex:1;flex:1}:host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list>mat-sidenav.mat-drawer-closed,:host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list>mat-sidenav.mat-drawer-closing,:host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list>mat-sidenav.mat-drawer-opened,:host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list>mat-sidenav.mat-drawer-opening{-webkit-box-shadow:none;box-shadow:none}:host ::ng-deep mat-sidenav-container.td-layout-nav-list>.mat-drawer-content{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}:host ::ng-deep mat-sidenav-container.td-layout-nav-list>mat-sidenav{-webkit-box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}`],\n  template: `<div class=\"td-layout-nav-list-wrapper\">\n  <mat-sidenav-container fullscreen class=\"td-layout-nav-list\">\n    <mat-sidenav #sidenav\n                position=\"start\"\n                [mode]=\"mode\"\n                [opened]=\"opened\"\n                [disableClose]=\"disableClose\"\n                [style.max-width]=\"sidenavWidth\"\n                [style.min-width]=\"sidenavWidth\">\n      <mat-toolbar [color]=\"color\">\n        <ng-content select=\"[td-menu-button]\"></ng-content>\n        <span *ngIf=\"icon || logo || toolbarTitle\"\n              class=\"td-layout-nav-list-toolbar-content\"\n              [class.cursor-pointer]=\"routerEnabled\"\n              (click)=\"handleNavigationClick()\">\n          <mat-icon *ngIf=\"icon\">{{icon}}</mat-icon>\n          <mat-icon *ngIf=\"logo && !icon\" class=\"mat-icon-logo\" [svgIcon]=\"logo\"></mat-icon>\n          <span *ngIf=\"toolbarTitle\">{{toolbarTitle}}</span>\n        </span>\n        <ng-content select=\"[td-sidenav-toolbar-content]\"></ng-content>\n      </mat-toolbar>\n      <div class=\"td-layout-nav-list-content\" cdkScrollable>\n        <ng-content select=\"[td-sidenav-content]\"></ng-content>\n      </div>\n    </mat-sidenav>\n    <div class=\"td-layout-nav-list-main\">\n      <mat-toolbar [color]=\"color\">\n        <ng-content select=\"[td-toolbar-content]\"></ng-content>\n      </mat-toolbar>\n      <div class=\"td-layout-nav-list-content\" cdkScrollable>\n        <ng-content></ng-content>\n      </div>\n      <ng-content select=\"td-layout-footer-inner\"></ng-content>\n    </div>\n  </mat-sidenav-container>\n</div>\n<ng-content select=\"td-layout-footer\"></ng-content>`,\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '350px';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n",
    "import { Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n})\nexport class TdLayoutNavListToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutNavListToggle') \n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n})\nexport class TdLayoutNavListCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutNavListClose') \n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n})\nexport class TdLayoutNavListOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutNavListOpen') \n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n",
    "import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styles: [`:host{position:relative;display:block;z-index:2;width:100%;min-height:100%;height:100%}:host [td-after-card]{display:block}.td-layout-card-over-wrapper{margin:-64px 0;width:100%;min-height:100%;height:100%}@media (min-width:600px){.td-layout-card-over-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-ms-flex-line-pack:start;align-content:flex-start;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.td-layout-card-over-wrapper .td-layout-card-over{max-height:100%;-webkit-box-sizing:border-box;box-sizing:border-box}}@media (max-width:599px){.td-layout-card-over-wrapper .td-layout-card-over{max-width:100%!important}}`],\n  template: `<mat-toolbar [color]=\"color\">\n</mat-toolbar>\n<div class=\"td-layout-card-over-wrapper\">\n  <div class=\"td-layout-card-over\"\n        [style.max-width.%]=\"cardWidth\"\n        [style.flex]=\"'1 1 ' + cardWidth + '%'\"\n        [style.-ms-flex]=\"'1 1 ' + cardWidth + '%'\"\n        [style.-webkit-box-flex]=\"1\">\n    <mat-card>\n      <mat-card-title *ngIf=\"cardTitle\">{{cardTitle}}</mat-card-title>\n      <mat-card-subtitle *ngIf=\"cardSubtitle\">{{cardSubtitle}}</mat-card-subtitle>\n      <mat-divider *ngIf=\"cardTitle || cardSubtitle\"></mat-divider>\n      <ng-content></ng-content>\n    </mat-card>\n    <ng-content select=\"[td-after-card]\"></ng-content>\n  </div>\n</div>\n`,\n})\nexport class TdLayoutCardOverComponent {\n\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input('cardTitle') cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input('cardSubtitle') cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input('cardWidth') cardWidth: number = 70;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n}\n",
    "import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styles: [`:host{display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;width:100%;min-height:100%;height:100%;overflow:hidden}:host mat-sidenav-container.td-layout-manage-list{-webkit-box-flex:1;-ms-flex:1;flex:1}:host mat-sidenav-container.td-layout-manage-list>mat-sidenav.mat-drawer-closed,:host mat-sidenav-container.td-layout-manage-list>mat-sidenav.mat-drawer-closing,:host mat-sidenav-container.td-layout-manage-list>mat-sidenav.mat-drawer-opened,:host mat-sidenav-container.td-layout-manage-list>mat-sidenav.mat-drawer-opening{-webkit-box-shadow:0 1px 3px 0 rgba(0,0,0,.2);box-shadow:0 1px 3px 0 rgba(0,0,0,.2)}:host .td-layout-manage-list-sidenav{text-align:start;-webkit-box-flex:1;-ms-flex:1;flex:1;display:block;position:relative;overflow:auto;-webkit-overflow-scrolling:touch}:host .td-layout-manage-list-main{margin:0;width:100%;min-height:100%;height:100%;position:relative;overflow:auto;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex}:host .td-layout-manage-list-main .td-layout-manage-list-content{display:block;position:relative;overflow:auto;-webkit-overflow-scrolling:touch;-webkit-box-flex:1;-ms-flex:1;flex:1}:host ::ng-deep mat-sidenav-container.td-layout-manage-list>.mat-drawer-content{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}:host ::ng-deep mat-sidenav-container.td-layout-manage-list>mat-sidenav{-webkit-box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}:host ::ng-deep mat-nav-list a[mat-list-item] .mat-list-item-content{font-size:14px}:host ::ng-deep .mat-toolbar{font-weight:400}`],\n  template: `<mat-sidenav-container fullscreen class=\"td-layout-manage-list\">\n  <mat-sidenav #sidenav\n              position=\"start\"\n              [mode]=\"mode\"\n              [opened]=\"opened\"\n              [disableClose]=\"disableClose\"\n              [style.max-width]=\"sidenavWidth\"\n              [style.min-width]=\"sidenavWidth\">\n    <ng-content select=\"mat-toolbar[td-sidenav-content]\"></ng-content>\n    <div class=\"td-layout-manage-list-sidenav\" cdkScrollable>\n      <ng-content select=\"[td-sidenav-content]\"></ng-content>\n    </div>\n  </mat-sidenav>\n  <div class=\"td-layout-manage-list-main\">\n    <ng-content select=\"mat-toolbar\"></ng-content>\n    <div class=\"td-layout-manage-list-content\" cdkScrollable>\n      <ng-content></ng-content>\n    </div>\n    <ng-content select=\"td-layout-footer-inner\"></ng-content>\n  </div>\n</mat-sidenav-container>\n`,\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '257px';\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n",
    "import { Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n})\nexport class TdLayoutManageListToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutManageListToggle') \n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n})\nexport class TdLayoutManageListCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutManageListClose') \n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n})\nexport class TdLayoutManageListOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutManageListOpen') \n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n",
    "import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styles: [`:host{display:block;padding:10px 16px}`],\n  template: `<ng-content></ng-content>\n`,\n})\nexport class TdLayoutFooterComponent {\n\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: string\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n\n}\n",
    "import { Component, Directive, Input, ContentChildren, OnInit, OnDestroy, forwardRef, Inject,\n         QueryList, SecurityContext, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { TdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {\n\n}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {\n\n}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styles: [`:host{width:100%}:host .td-navigation-drawer-content.ng-animating,:host .td-navigation-drawer-menu-content.ng-animating{overflow:hidden}:host mat-toolbar{padding:16px}:host mat-toolbar.td-toolbar-background{background-repeat:no-repeat;background-size:cover}:host mat-toolbar.td-nagivation-drawer-toolbar{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:auto!important;display:block!important}:host mat-toolbar .td-navigation-drawer-toolbar-content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}:host mat-toolbar .td-navigation-drawer-menu-toggle{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex}:host mat-toolbar .td-navigation-drawer-menu-toggle .td-navigation-drawer-label{-webkit-box-flex:1;-ms-flex:1;flex:1}:host mat-toolbar .td-navigation-drawer-menu-toggle .td-navigation-drawer-menu-button{height:24px;line-height:24px;width:24px}:host>div{overflow:hidden}`],\n  template: `<mat-toolbar [color]=\"color\"\n             [style.background-image]=\"backgroundImage\"\n             [class.td-toolbar-background]=\"!!isBackgroundAvailable\"\n             class=\"td-nagivation-drawer-toolbar\">\n  <ng-content select=\"[td-navigation-drawer-toolbar]\"></ng-content>\n  <ng-container *ngIf=\"!isCustomToolbar\">\n    <div *ngIf=\"icon || logo || sidenavTitle\"\n          class=\"td-navigation-drawer-toolbar-content\"\n          [class.cursor-pointer]=\"routerEnabled\"\n          (click)=\"handleNavigationClick()\">\n      <mat-icon *ngIf=\"icon\">{{icon}}</mat-icon>\n      <mat-icon *ngIf=\"logo && !icon\" class=\"mat-icon-logo\" [svgIcon]=\"logo\"></mat-icon>\n      <span *ngIf=\"sidenavTitle\" class=\"td-navigation-drawer-title\">{{sidenavTitle}}</span>\n    </div>\n    <div class=\"td-navigation-drawer-name\" *ngIf=\"email && name\">{{name}}</div>\n    <div class=\"td-navigation-drawer-menu-toggle\"\n        href\n        *ngIf=\"email || name\"\n        (click)=\"toggleMenu()\">\n      <span class=\"td-navigation-drawer-label\">{{email || name}}</span>\n      <button mat-icon-button class=\"td-navigation-drawer-menu-button\" *ngIf=\"isMenuAvailable\">\n        <mat-icon *ngIf=\"!menuToggled\">arrow_drop_down</mat-icon>\n        <mat-icon *ngIf=\"menuToggled\">arrow_drop_up</mat-icon>\n      </button>\n    </div>\n  </ng-container>\n</mat-toolbar>\n<div class=\"td-navigation-drawer-content\" [@tdCollapse]=\"menuToggled\">\n  <ng-content></ng-content>\n</div>\n<div class=\"td-navigation-drawer-menu-content\" [@tdCollapse]=\"!menuToggled\">\n  <ng-content select=\"[td-navigation-drawer-menu]\"></ng-content>\n</div>\n`,\n  animations: [ TdCollapseAnimation() ],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective) _drawerMenu: QueryList<TdNavigationDrawerMenuDirective>;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective) _toolbar: QueryList<TdNavigationDrawerToolbarDirective>;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input('sidenavTitle') sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input('color') color: string;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO Angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      let sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input('name') name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input('email') email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n              @Optional() private _router: Router,\n              private _sanitize: DomSanitizer) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this._layout.close();\n  }\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective, TdLayoutNavListCloseDirective, TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective, TdLayoutManageListCloseDirective, TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent, TdNavigationDrawerMenuDirective, TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollDispatchModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [\n    TD_LAYOUTS,\n  ],\n  exports: [\n    TD_LAYOUTS,\n  ],\n})\nexport class CovalentLayoutModule {\n\n}\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__extends",
    "__",
    "this",
    "constructor",
    "prototype",
    "create",
    "TdLayoutComponent",
    "mode",
    "opened",
    "sidenavWidth",
    "defineProperty",
    "get",
    "toggle",
    "sidenav",
    "open",
    "close",
    "type",
    "Component",
    "args",
    "selector",
    "styles",
    "template",
    "ViewChild",
    "MatSidenav",
    "Input",
    "LayoutToggleBase",
    "_TdLayoutToggleMixinBase",
    "mixinDisabled",
    "LayoutToggle",
    "_super",
    "_layout",
    "_renderer",
    "_elementRef",
    "_this",
    "call",
    "_initialized",
    "_hideWhenOpened",
    "addClass",
    "nativeElement",
    "tslib_1.__extends",
    "set",
    "hideWhenOpened",
    "_toggleVisibility",
    "ngAfterViewInit",
    "_toggleSubs",
    "_animationStarted",
    "subscribe",
    "ngOnDestroy",
    "unsubscribe",
    "undefined",
    "clickListener",
    "event",
    "preventDefault",
    "disabled",
    "onClick",
    "setStyle",
    "HostListener",
    "TdLayoutToggleDirective",
    "layout",
    "renderer",
    "elementRef",
    "tdLayoutToggle",
    "Directive",
    "decorators",
    "Inject",
    "forwardRef",
    "Renderer2",
    "ElementRef",
    "TdLayoutCloseDirective",
    "tdLayoutClose",
    "TdLayoutOpenDirective",
    "tdLayoutOpen",
    "TdLayoutNavComponent",
    "_router",
    "color",
    "navigationRoute",
    "handleNavigationClick",
    "routerEnabled",
    "navigateByUrl",
    "Router",
    "Optional",
    "toolbarTitle",
    "icon",
    "logo",
    "TdLayoutNavListComponent",
    "TdLayoutNavListToggleDirective",
    "tdLayoutNavListToggle",
    "TdLayoutNavListCloseDirective",
    "tdLayoutNavListClose",
    "TdLayoutNavListOpenDirective",
    "tdLayoutNavListOpen",
    "TdLayoutCardOverComponent",
    "cardWidth",
    "cardTitle",
    "cardSubtitle",
    "TdLayoutManageListComponent",
    "TdLayoutManageListToggleDirective",
    "tdLayoutManageListToggle",
    "TdLayoutManageListCloseDirective",
    "tdLayoutManageListClose",
    "TdLayoutManageListOpenDirective",
    "tdLayoutManageListOpen",
    "TdLayoutFooterComponent",
    "_color",
    "removeClass",
    "TdNavigationDrawerMenuDirective",
    "TdNavigationDrawerToolbarDirective",
    "TdNavigationDrawerComponent",
    "_sanitize",
    "_menuToggled",
    "_drawerMenu",
    "length",
    "_toolbar",
    "_backgroundImage",
    "backgroundUrl",
    "sanitizedUrl",
    "sanitize",
    "SecurityContext",
    "RESOURCE_URL",
    "STYLE",
    "ngOnInit",
    "_closeSubscription",
    "openedChange",
    "toggleMenu",
    "isMenuAvailable",
    "animations",
    "TdCollapseAnimation",
    "DomSanitizer",
    "ContentChildren",
    "sidenavTitle",
    "name",
    "email",
    "TD_LAYOUTS",
    "CovalentLayoutModule",
    "NgModule",
    "imports",
    "CommonModule",
    "ScrollDispatchModule",
    "MatSidenavModule",
    "MatToolbarModule",
    "MatButtonModule",
    "MatIconModule",
    "MatCardModule",
    "MatDividerModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
