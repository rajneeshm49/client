{
  "version": 3,
  "file": "covalent-core-json-formatter.umd.min.js",
  "sources": [
    "ng://@covalent/core/json-formatter/out/json-formatter.component.ts",
    "ng://@covalent/core/json-formatter/out/json-formatter.module.ts"
  ],
  "sourcesContent": [
    "import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\nimport { Dir } from '@angular/cdk/bidi';\nimport { TdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-json-formatter',\n  styles: [`:host{display:block}.td-json-formatter-wrapper{padding-top:2px;padding-bottom:2px}.td-json-formatter-wrapper .td-key{-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}.td-json-formatter-wrapper .td-key.td-key-node:hover{cursor:pointer}.td-json-formatter-wrapper .td-object-children.ng-animating{overflow:hidden}.td-json-formatter-wrapper .td-object-children .td-key,.td-json-formatter-wrapper .td-object-children .td-object-children{padding-left:24px}::ng-deep [dir=rtl] .td-json-formatter-wrapper .td-object-children .td-key,::ng-deep [dir=rtl] .td-json-formatter-wrapper .td-object-children .td-object-children{padding-right:24px;padding-left:0}.td-json-formatter-wrapper .td-object-children .td-key.td-key-leaf,.td-json-formatter-wrapper .td-object-children .td-object-children.td-key-leaf{padding-left:48px}::ng-deep [dir=rtl] .td-json-formatter-wrapper .td-object-children .td-key.td-key-leaf,::ng-deep [dir=rtl] .td-json-formatter-wrapper .td-object-children .td-object-children.td-key-leaf{padding-right:48px;padding-left:0}.td-json-formatter-wrapper .value{margin-left:5px}::ng-deep [dir=rtl] .td-json-formatter-wrapper .value{padding-right:5px;padding-left:0}.td-json-formatter-wrapper .value .td-empty{opacity:.5;text-decoration:line-through}.td-json-formatter-wrapper .value .date,.td-json-formatter-wrapper .value .string{word-break:break-word}`],\n  template: `<div class=\"td-json-formatter-wrapper\">\n  <a class=\"td-key\"\n     [class.td-key-node]=\"hasChildren()\"\n     [class.td-key-leaf]=\"!hasChildren()\"\n     [tabIndex]=\"isObject()? 0 : -1\"\n     (keydown.enter)=\"toggle()\"\n     (click)=\"toggle()\">\n    <mat-icon class=\"td-node-icon\" *ngIf=\"hasChildren()\">{{open? 'keyboard_arrow_down' : (isRTL ? 'keyboard_arrow_left' : 'keyboard_arrow_right')}}</mat-icon>\n    <span *ngIf=\"key\" class=\"key\">{{key}}:</span>\n    <span class=\"value\">\n      <span [class.td-empty]=\"!hasChildren()\" *ngIf=\"isObject()\" [matTooltip]=\"getPreview()\" matTooltipPosition=\"after\">\n        <span class=\"td-object-name\">{{getObjectName()}}</span>\n        <span class=\"td-array-length\" *ngIf=\"isArray()\">[{{data.length}}]</span>\n      </span>\n      <span *ngIf=\"!isObject()\" [class]=\"getType(data)\">{{getValue(data)}}</span>\n    </span>\n  </a>\n  <div class=\"td-object-children\" [@tdCollapse]=\"!(hasChildren() && open)\">\n    <ng-template let-key ngFor [ngForOf]=\"children\">\n      <td-json-formatter [key]=\"key\" [data]=\"data[key]\" [levelsOpen]=\"levelsOpen - 1\"></td-json-formatter>\n    </ng-template>\n  </div>\n</div>`,\n  animations: [\n    TdCollapseAnimation(),\n  ],\n})\nexport class TdJsonFormatterComponent {\n\n  /**\n   * Max length for property names. Any names bigger than this get trunctated.\n   */\n  private static KEY_MAX_LENGTH: number = 30;\n\n  /**\n   * Max length for preview string. Any names bigger than this get trunctated.\n   */\n  private static PREVIEW_STRING_MAX_LENGTH: number = 80;\n\n  /**\n   * Max tooltip preview elements.\n   */\n  private static PREVIEW_LIMIT: number = 5;\n\n  private _key: string;\n  private _data: any;\n  private _children: string[];\n  private _open: boolean = false;\n  private _levelsOpen: number = 0;\n\n  /**\n   * levelsOpen?: number\n   * Levels opened by default when JS object is formatted and rendered.\n   */\n  @Input('levelsOpen')\n  set levelsOpen(levelsOpen: number) {\n    if (!Number.isInteger(levelsOpen)) {\n      throw new Error('[levelsOpen] needs to be an integer.');\n    }\n    this._levelsOpen = levelsOpen;\n    this._open = levelsOpen > 0;\n  }\n  get levelsOpen(): number {\n    return this._levelsOpen;\n  }\n\n  get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * key?: string\n   * Tag to be displayed next to formatted object.\n   */\n  @Input('key')\n  set key(key: string) {\n    this._key = key;\n  }\n  get key(): string {\n    let elipsis: string = this._key && this._key.length > TdJsonFormatterComponent.KEY_MAX_LENGTH ? '…' : '';\n    return this._key ? this._key.substring(0, TdJsonFormatterComponent.KEY_MAX_LENGTH) + elipsis : this._key;\n  }\n\n  /**\n   * data: any\n   * JS object to be formatted.\n   */\n  @Input('data')\n  set data(data: any) {\n    this._data = data;\n    this.parseChildren();\n  }\n  get data(): any {\n    return this._data;\n  }\n\n  get children(): string[] {\n    return this._children;\n  }\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Dir) {\n  }\n\n  /**\n   * Refreshes json-formatter and rerenders [data]\n   */\n  refresh(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Toggles collapse/expanded state of component.\n   */\n  toggle(): void {\n    this._open = !this._open;\n  }\n\n  isObject(): boolean {\n    return this.getType(this._data) === 'object';\n  }\n\n  isArray(): boolean {\n    return Array.isArray(this._data);\n  }\n\n  hasChildren(): boolean {\n    return this._children && this._children.length > 0;\n  }\n\n  /**\n   * Gets parsed value depending on value type.\n   */\n  getValue(value: any): string {\n    let type: string = this.getType(value);\n    if (type === 'undefined' || (type === 'null')) {\n      return type;\n    } else if (type === 'date') {\n      value = new Date(value).toString();\n    } else if (type === 'string') {\n      value = '\"' + value + '\"';\n    } else if (type === 'function') {\n      // Remove content of the function\n      return value.toString()\n          .replace(/[\\r\\n]/g, '')\n          .replace(/\\{.*\\}/, '') + '{…}';\n    } else if (Array.isArray(value)) {\n      return this.getObjectName() + ' [' + value.length + ']';\n    }\n    return value;\n  }\n\n  /**\n   * Gets type of object.\n   * returns 'null' if object is null and 'date' if value is object and can be parsed to a date.\n   */\n  getType(object: any): string {\n    if (typeof object === 'object') {\n      if (!object) {\n        return 'null';\n      }\n      if (Array.isArray(object)) {\n        return 'object';\n      }\n      let date: Date = new Date(object);\n      if (Object.prototype.toString.call(date) === '[object Date]') {\n        if (!Number.isNaN(date.getTime())) {\n          return 'date';\n        }\n      }\n    }\n    return typeof object;\n  }\n\n  /**\n   * Generates string representation depending if its an object or function.\n   * see: http://stackoverflow.com/a/332429\n   */\n  getObjectName(): string {\n    let object: any = this._data;\n    if (this.isObject() && !object.constructor) {\n        return 'Object';\n    }\n    let funcNameRegex: RegExp = /function (.{1,})\\(/;\n    let results: RegExpExecArray = (funcNameRegex).exec((object).constructor.toString());\n    if (results && results.length > 1) {\n      return results[1];\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Creates preview of nodes children to render in tooltip depending if its an array or an object.\n   */\n  getPreview(): string {\n    let previewData: string[];\n    let startChar: string = '{ ';\n    let endChar: string = ' }';\n    if (this.isArray()) {\n      let previewArray: any[] = this._data.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewArray.map((obj: any) => {\n        return this.getValue(obj);\n      });\n      startChar = '[';\n      endChar = ']';\n    } else {\n      let previewKeys: string[] = this._children.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewKeys.map((key: string) => {\n        return key + ': ' + this.getValue(this._data[key]);\n      });\n    }\n    let previewString: string =  previewData.join(', ');\n    let ellipsis: string = previewData.length >= TdJsonFormatterComponent.PREVIEW_LIMIT ||\n                           previewString.length > TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH ? '…' : '';\n    return startChar + previewString.substring(0, TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH) +\n           ellipsis + endChar;\n  }\n\n  private parseChildren(): void {\n    if (this.isObject()) {\n      this._children = [];\n      for (let key in this._data) {\n        this._children.push(key);\n      }\n    }\n  }\n\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdJsonFormatterComponent } from './json-formatter.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TdJsonFormatterComponent,\n  ],\n  exports: [\n    TdJsonFormatterComponent,\n  ],\n})\nexport class CovalentJsonFormatterModule {\n\n}\n"
  ],
  "names": [
    "TdJsonFormatterComponent",
    "_changeDetectorRef",
    "_dir",
    "this",
    "_open",
    "_levelsOpen",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "set",
    "levelsOpen",
    "Number",
    "isInteger",
    "Error",
    "elipsis",
    "_key",
    "length",
    "KEY_MAX_LENGTH",
    "substring",
    "key",
    "_data",
    "data",
    "parseChildren",
    "_children",
    "dir",
    "refresh",
    "markForCheck",
    "toggle",
    "isObject",
    "getType",
    "isArray",
    "Array",
    "hasChildren",
    "getValue",
    "value",
    "type",
    "Date",
    "toString",
    "replace",
    "getObjectName",
    "object",
    "date",
    "call",
    "isNaN",
    "getTime",
    "constructor",
    "results",
    "exec",
    "getPreview",
    "previewData",
    "_this",
    "startChar",
    "endChar",
    "slice",
    "PREVIEW_LIMIT",
    "map",
    "obj",
    "previewString",
    "join",
    "ellipsis",
    "PREVIEW_STRING_MAX_LENGTH",
    "push",
    "Component",
    "args",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "selector",
    "styles",
    "template",
    "animations",
    "TdCollapseAnimation",
    "ChangeDetectorRef",
    "Dir",
    "decorators",
    "Optional",
    "Input",
    "CovalentJsonFormatterModule",
    "NgModule",
    "imports",
    "CommonModule",
    "MatTooltipModule",
    "MatIconModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
