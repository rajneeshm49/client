{
  "version": 3,
  "file": "covalent-core-chips.umd.min.js",
  "sources": [
    "ng://@covalent/core/chips/node_modules/tslib/tslib.es6.js",
    "ng://@covalent/core/chips/out/chips.component.ts",
    "ng://@covalent/core/chips/out/chips.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { Component, Input, Output, forwardRef, DoCheck, ViewChild, ViewChildren, QueryList, OnInit, HostListener,\n  ElementRef, Optional, Inject, Directive, TemplateRef, ViewContainerRef, ContentChild, ChangeDetectionStrategy,\n  ChangeDetectorRef, AfterViewInit, OnDestroy, HostBinding, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, LEFT_ARROW, RIGHT_ARROW, DELETE, BACKSPACE, ENTER, SPACE, TAB, HOME } from '@angular/cdk/keycodes';\nimport { MatChip } from '@angular/material/chips';\nimport { MatInput } from '@angular/material/input';\nimport { MatOption } from '@angular/material/core';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\nimport { Observable, Subscription, timer, merge, fromEvent } from 'rxjs';\nimport { filter, debounceTime } from 'rxjs/operators';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-chip]ng-template',\n})\nexport class TdChipDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-autocomplete-option]ng-template',\n})\nexport class TdAutocompleteOptionDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdChipsBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdChipsMixinBase = mixinControlValueAccessor(mixinDisabled(TdChipsBase), []);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdChipsComponent),\n    multi: true,\n  }],\n  selector: 'td-chips',\n  inputs: ['disabled', 'value'],\n  styles: [`:host{display:block;padding:0 5px;min-height:48px}:host .td-chips-wrapper{min-height:42px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}:host .td-chips-wrapper.td-chips-stacked .mat-basic-chip,:host .td-chips-wrapper.td-chips-stacked .td-chips-form-field{width:100%}:host .td-chips-wrapper.td-chips-input-before-position .td-chips-form-field{-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1}:host .td-chip,:host .td-chip>.td-chip-content{-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;max-width:100%;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}:host .td-chip.td-chip-stacked,:host .td-chip>.td-chip-content.td-chip-stacked{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}:host ::ng-deep .mat-form-field-wrapper{padding-bottom:2px}:host ::ng-deep .mat-basic-chip{display:inline-block;cursor:default;border-radius:16px;margin:8px 8px 0 0;-webkit-box-sizing:border-box;box-sizing:border-box;max-width:100%;position:relative}html[dir=rtl] :host ::ng-deep .mat-basic-chip{margin:8px 0 0 8px;unicode-bidi:embed}body[dir=rtl] :host ::ng-deep .mat-basic-chip{margin:8px 0 0 8px;unicode-bidi:embed}[dir=rtl] :host ::ng-deep .mat-basic-chip{margin:8px 0 0 8px;unicode-bidi:embed}:host ::ng-deep .mat-basic-chip bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host ::ng-deep .mat-basic-chip bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host ::ng-deep .mat-basic-chip .td-chip{min-height:32px;line-height:32px;font-size:13px;padding:0 0 0 12px}html[dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip{padding:0 12px 0 0;unicode-bidi:embed}body[dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip{padding:0 12px 0 0;unicode-bidi:embed}[dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip{padding:0 12px 0 0;unicode-bidi:embed}:host ::ng-deep .mat-basic-chip .td-chip bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host ::ng-deep .mat-basic-chip .td-chip bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar]{display:inline-block;-webkit-box-ordinal-group:-19;-ms-flex-order:-20;order:-20;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;height:32px;width:32px;margin:0 8px 0 -12px;border-radius:50%}html[dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar]{margin:0 -12px 0 8px;unicode-bidi:embed}body[dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar]{margin:0 -12px 0 8px;unicode-bidi:embed}[dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar]{margin:0 -12px 0 8px;unicode-bidi:embed}:host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar] bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar] bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host ::ng-deep .mat-basic-chip.td-chip-after-pad{padding:0 12px 0 0}html[dir=rtl] :host ::ng-deep .mat-basic-chip.td-chip-after-pad{padding:0 0 0 12px;unicode-bidi:embed}body[dir=rtl] :host ::ng-deep .mat-basic-chip.td-chip-after-pad{padding:0 0 0 12px;unicode-bidi:embed}[dir=rtl] :host ::ng-deep .mat-basic-chip.td-chip-after-pad{padding:0 0 0 12px;unicode-bidi:embed}:host ::ng-deep .mat-basic-chip.td-chip-after-pad bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host ::ng-deep .mat-basic-chip.td-chip-after-pad bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host ::ng-deep .mat-basic-chip mat-icon.td-chip-removal{margin:0 4px;font-size:21px;line-height:22px}:host ::ng-deep .mat-basic-chip mat-icon.td-chip-removal:hover{cursor:pointer}:host ::ng-deep .td-chips-stacked .mat-basic-chip{margin:4px 0}:host ::ng-deep .td-chips-stacked .mat-basic-chip:first-of-type{margin:8px 0 4px}:host ::ng-deep .td-chips-stacked .mat-basic-chip:last-of-type{margin:4px 0 8px}:host .mat-form-field-underline{position:relative;height:1px;width:100%;bottom:0}:host .mat-form-field-underline.mat-disabled{background-position:0;bottom:-4px;background-color:transparent}:host .mat-form-field-underline .mat-form-field-ripple{position:absolute;height:2px;top:0;width:100%;-webkit-transform-origin:50%;transform-origin:50%;-webkit-transform:scaleX(.5);transform:scaleX(.5);visibility:hidden;opacity:0;-webkit-transition:background-color .3s cubic-bezier(.55,0,.55,.2);transition:background-color .3s cubic-bezier(.55,0,.55,.2)}:host .mat-form-field-underline .mat-form-field-ripple.mat-focused{visibility:visible;opacity:1;-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transition:background-color .3s cubic-bezier(.55,0,.55,.2),-webkit-transform 150ms linear;transition:background-color .3s cubic-bezier(.55,0,.55,.2),-webkit-transform 150ms linear;transition:transform 150ms linear,background-color .3s cubic-bezier(.55,0,.55,.2);transition:transform 150ms linear,background-color .3s cubic-bezier(.55,0,.55,.2),-webkit-transform 150ms linear}:host ::ng-deep mat-form-field .mat-form-field-underline{display:none}`],\n  template: `<div class=\"td-chips-wrapper\"\n     [class.td-chips-stacked]=\"stacked\"\n     [class.td-chips-input-before-position]=\"inputPosition === 'before'\">\n  <ng-template let-chip let-first=\"first\" let-index=\"index\" ngFor [ngForOf]=\"value\">\n    <mat-basic-chip [class.td-chip-disabled]=\"disabled\"\n                   [class.td-chip-after-pad]=\"!canRemoveChip\"\n                   [disableRipple]=\"true\"\n                   [color]=\"color\"\n                   (keydown)=\"_chipKeydown($event, index)\"\n                   (blur)=\"_handleChipBlur($event, chip)\"\n                   (focus)=\"_handleChipFocus($event, chip)\">\n      <div class=\"td-chip\" [class.td-chip-stacked]=\"stacked\">\n        <span class=\"td-chip-content\">\n          <span *ngIf=\"!_chipTemplate?.templateRef\">{{chip}}</span>\n          <ng-template\n            *ngIf=\"_chipTemplate?.templateRef\"\n            [ngTemplateOutlet]=\"_chipTemplate?.templateRef\"\n            [ngTemplateOutletContext]=\"{ chip: chip }\">\n          </ng-template>\n        </span>\n        <mat-icon *ngIf=\"canRemoveChip\" class=\"td-chip-removal\" (click)=\"_internalClick = removeChip(index)\">\n          cancel\n        </mat-icon>\n      </div>\n    </mat-basic-chip>\n  </ng-template>\n  <mat-form-field floatLabel=\"never\"\n                  class=\"td-chips-form-field\"\n                  [style.width.px]=\"canAddChip ? null : 0\"\n                  [style.height.px]=\"canAddChip ? null : 0\"\n                  [color]=\"color\">\n    <input matInput\n            #input\n            [tabIndex]=\"-1\"\n            [matAutocomplete]=\"autocomplete\"\n            [formControl]=\"inputControl\"\n            [placeholder]=\"canAddChip? placeholder : ''\"\n            (keydown)=\"_inputKeydown($event)\"\n            (keyup.enter)=\"_handleAddChip()\"\n            (focus)=\"_handleFocus()\">\n  </mat-form-field>\n  <mat-autocomplete #autocomplete=\"matAutocomplete\"\n                   [displayWith]=\"_removeInputDisplay\"\n                   (optionSelected)=\"addChip($event.option.value)\">\n    <ng-template let-item let-first=\"first\" ngFor [ngForOf]=\"items\">\n      <mat-option (click)=\"_setInternalClick()\" [value]=\"item\">\n        <span *ngIf=\"!_autocompleteOptionTemplate?.templateRef\">{{item}}</span>\n        <ng-template\n          *ngIf=\"_autocompleteOptionTemplate?.templateRef\"\n          [ngTemplateOutlet]=\"_autocompleteOptionTemplate?.templateRef\"\n          [ngTemplateOutletContext]=\"{ option: item }\">\n        </ng-template>\n      </mat-option>\n    </ng-template>\n  </mat-autocomplete>\n</div>\n<div *ngIf=\"chipAddition\" class=\"mat-form-field-underline\"\n      [class.mat-disabled]=\"disabled\">\n  <span class=\"mat-form-field-ripple\"\n        [class.mat-focused]=\"focused\"></span>\n</div>\n<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChipsComponent extends _TdChipsMixinBase implements IControlValueAccessor, DoCheck, OnInit, AfterViewInit, OnDestroy, ICanDisable {\n\n  private _outsideClickSubs: Subscription;\n\n  private _isMousedown: boolean = false;\n\n  private _items: any[];\n  private _length: number = 0;\n  private _stacked: boolean = false;\n  private _requireMatch: boolean = false;\n  private _color: 'primary' | 'accent' | 'warn' = 'primary';\n  private _inputPosition: 'before' | 'after' = 'after';\n  private _chipAddition: boolean = true;\n  private _chipRemoval: boolean = true;\n  private _focused: boolean = false;\n  private _tabIndex: number = 0;\n\n  _internalClick: boolean = false;\n  _internalActivateOption: boolean = false;\n\n  @ViewChild('input') _nativeInput: ElementRef;\n  @ViewChild(MatInput) _inputChild: MatInput;\n  @ViewChild(MatAutocompleteTrigger) _autocompleteTrigger: MatAutocompleteTrigger;\n  @ViewChildren(MatChip) _chipsChildren: QueryList<MatChip>;\n\n  @ContentChild(TdChipDirective) _chipTemplate: TdChipDirective;\n  @ContentChild(TdAutocompleteOptionDirective) _autocompleteOptionTemplate: TdAutocompleteOptionDirective;\n\n  @ViewChildren(MatOption) _options: QueryList<MatOption>;\n\n  /**\n   * Flag that is true when autocomplete is focused.\n   */\n  get focused(): boolean {\n    return this._focused;\n  }\n\n  /**\n   * FormControl for the matInput element.\n   */\n  inputControl: FormControl = new FormControl();\n\n  /**\n   * items?: any[]\n   * Renders the `mat-autocomplete` with the provided list to display as options.\n   */\n  @Input('items')\n  set items(items: any[]) {\n    this._items = items;\n    this._setFirstOptionActive();\n    this._changeDetectorRef.markForCheck();\n  }\n  get items(): any[] {\n    return this._items;\n  }\n\n  /**\n   * stacked?: boolean\n   * Set stacked or horizontal chips depending on value.\n   * Defaults to false.\n   */\n  @Input('stacked')\n  set stacked(stacked: boolean) {\n    this._stacked = coerceBooleanProperty(stacked);\n  }\n  get stacked(): boolean {\n    return this._stacked;\n  }\n\n  /**\n   * inputPosition?: 'before' | 'after'\n   * Set input position before or after the chips.\n   * Defaults to 'after'.\n   */\n  @Input('inputPosition')\n  set inputPosition(inputPosition: 'before' | 'after') {\n    this._inputPosition = inputPosition;\n  }\n  get inputPosition(): 'before' | 'after' {\n    return this._inputPosition;\n  }\n\n  /**\n   * requireMatch?: boolean\n   * Blocks custom inputs and only allows selections from the autocomplete list.\n   */\n  @Input('requireMatch')\n  set requireMatch(requireMatch: boolean) {\n    this._requireMatch = coerceBooleanProperty(requireMatch);\n  }\n  get requireMatch(): boolean {\n    return this._requireMatch;\n  }\n\n  /**\n   * chipAddition?: boolean\n   * Disables the ability to add chips. When setting disabled as true, this will be overriden.\n   * Defaults to true.\n   */\n  @Input('chipAddition')\n  set chipAddition(chipAddition: boolean) {\n    this._chipAddition = chipAddition;\n    this._toggleInput();\n  }\n  get chipAddition(): boolean {\n    return this._chipAddition;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   * States if a chip can be added and if the input is available\n   */\n  get canAddChip(): boolean {\n    return this.chipAddition && !this.disabled;\n  }\n\n  /**\n   * chipRemoval?: boolean\n   * Disables the ability to remove chips. If it doesn't exist chip remmoval defaults to true.\n   * When setting disabled as true, this will be overriden to false.\n   */\n  @Input('chipRemoval')\n  set chipRemoval(chipRemoval: boolean) {\n    this._chipRemoval = chipRemoval;\n  }\n  get chipRemoval(): boolean {\n    return this._chipRemoval;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipRemoval is set to 'true'\n   * States if a chip can be removed\n   */\n  get canRemoveChip(): boolean {\n    return this.chipRemoval && !this.disabled;\n  }\n\n  /**\n   * placeholder?: string\n   * Placeholder for the autocomplete input.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 200.\n   */\n  @Input('debounce') debounce: number = 200;\n\n  /**\n   * color?: 'primary' | 'accent' | 'warn'\n   * Sets the color for the input and focus/selected state of the chips.\n   * Defaults to 'primary'\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  /**\n   * add?: function\n   * Method to be executed when a chip is added.\n   * Sends chip value as event.\n   */\n  @Output('add') onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * remove?: function\n   * Method to be executed when a chip is removed.\n   * Sends chip value as event.\n   */\n  @Output('remove') onRemove: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * inputChange?: function\n   * Method to be executed when the value in the autocomplete input changes.\n   * Sends string value as event.\n   */\n  @Output('inputChange') onInputChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * chipFocus?: function\n   * Method to be executed when a chip is focused.\n   * Sends chip value as event.\n   */\n  @Output('chipFocus') onChipFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * blur?: function\n   * Method to be executed when a chip is blurred.\n   * Sends chip value as event.\n   */\n  @Output('chipBlur') onChipBlur: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Hostbinding to set the a11y of the TdChipsComponent depending on its state\n   */\n  @HostBinding('attr.tabindex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : this._tabIndex;\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n  }\n\n  /**\n   * Listens to host focus event to act on it\n   */\n  @HostListener('focus', ['$event'])\n  focusListener(event: FocusEvent): void {\n    // should only focus if its not via mousedown to prevent clashing with autocomplete\n    if (!this._isMousedown) {\n      this.focus();\n    }\n    event.preventDefault();\n  }\n\n  /**\n   * Listens to host mousedown event to act on it\n   */\n  @HostListener('mousedown', ['$event'])\n  mousedownListener(event: FocusEvent): void {\n     // sets a flag to know if there was a mousedown and then it returns it back to false\n    this._isMousedown = true;\n    timer().toPromise().then(() => {\n      this._isMousedown = false;\n    });\n  }\n\n  /**\n   * If clicking on :host or `td-chips-wrapper`, then we stop the click propagation so the autocomplete\n   * doesnt close automatically.\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    const clickTarget: HTMLElement = <HTMLElement>event.target;\n    if (clickTarget === this._elementRef.nativeElement ||\n        clickTarget.className.indexOf('td-chips-wrapper') > -1) {\n      this.focus();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Listens to host keydown event to act on it depending on the keypress\n   */\n  @HostListener('keydown', ['$event'])\n  keydownListener(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case TAB:\n        // if tabing out, then unfocus the component\n        timer().toPromise().then(() => {\n          this.removeFocusedState();\n        });\n        break;\n      case ESCAPE:\n        if (this._inputChild.focused) {\n          this._nativeInput.nativeElement.blur();\n          this.removeFocusedState();\n          this._closeAutocomplete();\n        } else {\n          this.focus();\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  ngOnInit(): void {\n    this.inputControl.valueChanges.pipe(\n      debounceTime(this.debounce),\n    ).subscribe((value: string) => {\n      this.onInputChange.emit(value ? value : '');\n    });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterViewInit(): void {\n    this._watchOutsideClick();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngDoCheck(): void {\n    // Throw onChange event only if array changes size.\n    if (this.value && this.value.length !== this._length) {\n      this._length = this.value.length;\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._outsideClickSubs) {\n      this._outsideClickSubs.unsubscribe();\n      this._outsideClickSubs = undefined;\n    }\n  }\n\n  _setInternalClick(): void {\n    this._internalClick = true;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    this._toggleInput();\n  }\n\n  /**\n   * Method that is executed when trying to create a new chip from the autocomplete.\n   * It check if [requireMatch] is enabled, and tries to add the first active option\n   * else if just adds the value thats on the input\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  _handleAddChip(): boolean {\n    let value: any;\n    if (this.requireMatch) {\n      let selectedOptions: MatOption[] = this._options.toArray().filter((option: MatOption) => {\n        return option.active;\n      });\n      if (selectedOptions.length > 0) {\n        value = selectedOptions[0].value;\n        selectedOptions[0].setInactiveStyles();\n      }\n      if (!value) {\n        return false;\n      }\n    } else {\n      // if there is a selection, then use that\n      // else use the input value as chip\n      if (this._autocompleteTrigger.activeOption) {\n        value = this._autocompleteTrigger.activeOption.value;\n        this._autocompleteTrigger.activeOption.setInactiveStyles();\n      } else {\n        value = this._inputChild.value;\n        if (value.trim() === '') {\n          return false;\n        }\n      }\n    }\n    return this.addChip(value);\n  }\n\n  /**\n   * Method thats exectuted when trying to add a value as chip\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  addChip(value: any): boolean {\n    /**\n     * add a debounce ms delay when reopening the autocomplete to give it time\n     * to rerender the next list and at the correct spot\n     */\n    this._closeAutocomplete();\n    timer(this.debounce).toPromise().then(() => {\n      this.setFocusedState();\n      this._setFirstOptionActive();\n      this._openAutocomplete();\n    });\n\n    this.inputControl.setValue('');\n    // check if value is already part of the model\n    if (this.value.indexOf(value) > -1) {\n      return false;\n    }\n\n    this.value.push(value);\n    this.onAdd.emit(value);\n    this.onChange(this.value);\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Method that is executed when trying to remove a chip.\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  removeChip(index: number): boolean {\n    let removedValues: any[] = this.value.splice(index, 1);\n    if (removedValues.length === 0) {\n      return false;\n    }\n\n    /**\n     * Checks if deleting last single chip, to focus input afterwards\n     * Else check if its not the last chip of the list to focus the next one.\n     */\n    if (index === (this._totalChips - 1) && index === 0) {\n      this._inputChild.focus();\n    } else if (index < (this._totalChips - 1)) {\n      this._focusChip(index + 1);\n    } else if (index > 0) {\n      this._focusChip(index - 1);\n    }\n\n    this.onRemove.emit(removedValues[0]);\n    this.onChange(this.value);\n    this.inputControl.setValue('');\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Sets blur of chip and sends out event\n   */\n  _handleChipBlur(event: FocusEvent, value: any): void {\n    this.onChipBlur.emit(value);\n  }\n\n  /**\n   * Sets focus of chip and sends out event\n   */\n  _handleChipFocus(event: FocusEvent, value: any): void {\n    this.setFocusedState();\n    this.onChipFocus.emit(value);\n  }\n\n  _handleFocus(): boolean {\n    this.setFocusedState();\n    this._setFirstOptionActive();\n    return true;\n  }\n\n  /**\n   * Sets focus state of the component\n   */\n  setFocusedState(): void {\n    if (!this.disabled) {\n      this._focused = true;\n      this._tabIndex = -1;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Removes focus state of the component\n   */\n  removeFocusedState(): void {\n    this._focused = false;\n    this._tabIndex = 0;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Programmatically focus the input or first chip. Since its the component entry point\n   * depending if a user can add or remove chips\n   */\n  focus(): void {\n    if (this.canAddChip) {\n      this._inputChild.focus();\n    } else if (!this.disabled) {\n      this._focusFirstChip();\n    }\n  }\n\n  /**\n   * Passes relevant input key presses.\n   */\n  _inputKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case UP_ARROW:\n        /**\n         * Since the first item is highlighted on [requireMatch], we need to inactivate it\n         * when pressing the up key\n         */\n        if (this.requireMatch) {\n          let length: number = this._options.length;\n          if (length > 1 && this._options.toArray()[0].active && this._internalActivateOption) {\n            this._options.toArray()[0].setInactiveStyles();\n            this._internalActivateOption = false;\n            // prevent default window scrolling\n            event.preventDefault();\n          }\n        }\n        break;\n      case LEFT_ARROW:\n      case DELETE:\n      case BACKSPACE:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing left arrow to move to the last chip */\n        if (!this._inputChild.value) {\n          this._focusLastChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      case RIGHT_ARROW:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing right arrow to move to the first chip */\n        if (!this._inputChild.value) {\n          this._focusFirstChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Passes relevant chip key presses.\n   */\n  _chipKeydown(event: KeyboardEvent, index: number): void {\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        /** Check to see if we can delete a chip */\n        if (this.canRemoveChip) {\n         this.removeChip(index);\n        }\n        break;\n      case UP_ARROW:\n      case LEFT_ARROW:\n        /**\n         * Check to see if left/down arrow was pressed while focusing the first chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === 0) {\n          // only try to target input if pressing left\n          if (this.canAddChip && event.keyCode === LEFT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusLastChip();\n          }\n        } else if (index > 0) {\n          this._focusChip(index - 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      case DOWN_ARROW:\n      case RIGHT_ARROW:\n        /**\n         * Check to see if right/up arrow was pressed while focusing the last chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === (this._totalChips - 1)) {\n          // only try to target input if pressing right\n          if (this.canAddChip && event.keyCode === RIGHT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusFirstChip();\n          }\n        } else if (index < (this._totalChips - 1)) {\n          this._focusChip(index + 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Method to remove from display the value added from the autocomplete since it goes directly as chip.\n   */\n  _removeInputDisplay(): string {\n    return '';\n  }\n\n  /**\n   * Method to open the autocomplete manually if its not already opened\n   */\n  _openAutocomplete(): void {\n    if (!this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.openPanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Method to close the autocomplete manually if its not already closed\n   */\n  _closeAutocomplete(): void {\n    if (this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.closePanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Get total of chips\n   */\n  get _totalChips(): number {\n    let chips: MatChip[] = this._chipsChildren.toArray();\n    return chips.length;\n  }\n\n  /**\n   * Method to focus a desired chip by index\n   */\n  private _focusChip(index: number): void {\n    /** check to see if index exists in the array before focusing */\n    if (index > -1 && this._totalChips > index) {\n      this._chipsChildren.toArray()[index].focus();\n    }\n  }\n\n  /** Method to focus first chip */\n  private _focusFirstChip(): void {\n    this._focusChip(0);\n  }\n\n  /** Method to focus last chip */\n  private _focusLastChip(): void {\n    this._focusChip(this._totalChips - 1);\n  }\n\n  /**\n   * Method to toggle the disable state of input\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   */\n  private _toggleInput(): void {\n    if (this.canAddChip) {\n      this.inputControl.enable();\n    } else {\n      this.inputControl.disable();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Sets first option as active to let the user know which one will be added when pressing enter\n   * Only if [requireMatch] has been set\n   */\n  private _setFirstOptionActive(): void {\n    if (this.requireMatch) {\n      // need to use a timer here to wait until the autocomplete has been opened (end of queue)\n      timer().toPromise().then(() => {\n        if (this.focused && this._options && this._options.length > 0) {\n          // clean up of previously active options\n          this._options.toArray().forEach((option: MatOption) => {\n            option.setInactiveStyles();\n          });\n          // set the first one as active\n          this._options.toArray()[0].setActiveStyles();\n          this._internalActivateOption = true;\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n  }\n\n  /**\n   * Watches clicks outside of the component to remove the focus\n   * The autocomplete panel is considered inside the component so we\n   * need to use a flag to find out when its clicked.\n   */\n  private _watchOutsideClick(): void {\n    if (this._document) {\n      merge(\n        fromEvent(this._document, 'click'),\n        fromEvent(this._document, 'touchend'),\n      ).pipe(\n        filter(\n          (event: MouseEvent) => {\n            const clickTarget: HTMLElement = <HTMLElement>event.target;\n            setTimeout(() => {\n              this._internalClick = false;\n            });\n            return this.focused &&\n                  (clickTarget !== this._elementRef.nativeElement) &&\n                  !this._elementRef.nativeElement.contains(clickTarget) && !this._internalClick;\n          },\n        ),\n      ).subscribe(() => {\n        if (this.focused) {\n          this._autocompleteTrigger.closePanel();\n          this.removeFocusedState();\n          this.onTouched();\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n    return undefined;\n  }\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective } from './chips.component';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n  ],\n  declarations: [\n    TdChipsComponent,\n    TdChipDirective,\n    TdAutocompleteOptionDirective,\n  ],\n  exports: [\n    TdChipsComponent,\n    TdChipDirective,\n    TdAutocompleteOptionDirective,\n  ],\n})\nexport class CovalentChipsModule {\n\n}\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__extends",
    "__",
    "this",
    "constructor",
    "prototype",
    "create",
    "TdChipDirective",
    "_super",
    "templateRef",
    "viewContainerRef",
    "call",
    "tslib_1.__extends",
    "TemplatePortalDirective",
    "type",
    "Directive",
    "args",
    "selector",
    "TemplateRef",
    "ViewContainerRef",
    "TdAutocompleteOptionDirective",
    "TdChipsBase",
    "_changeDetectorRef",
    "_TdChipsMixinBase",
    "mixinControlValueAccessor",
    "mixinDisabled",
    "TdChipsComponent",
    "_elementRef",
    "_renderer",
    "_document",
    "_this",
    "_isMousedown",
    "_length",
    "_stacked",
    "_requireMatch",
    "_color",
    "_inputPosition",
    "_chipAddition",
    "_chipRemoval",
    "_focused",
    "_tabIndex",
    "_internalClick",
    "_internalActivateOption",
    "inputControl",
    "FormControl",
    "debounce",
    "onAdd",
    "EventEmitter",
    "onRemove",
    "onInputChange",
    "onChipFocus",
    "onChipBlur",
    "addClass",
    "nativeElement",
    "defineProperty",
    "get",
    "_items",
    "set",
    "items",
    "_setFirstOptionActive",
    "markForCheck",
    "stacked",
    "coerceBooleanProperty",
    "inputPosition",
    "requireMatch",
    "chipAddition",
    "_toggleInput",
    "disabled",
    "chipRemoval",
    "color",
    "removeClass",
    "focusListener",
    "event",
    "focus",
    "preventDefault",
    "mousedownListener",
    "timer",
    "toPromise",
    "then",
    "clickListener",
    "clickTarget",
    "className",
    "indexOf",
    "stopPropagation",
    "keydownListener",
    "keyCode",
    "TAB",
    "removeFocusedState",
    "ESCAPE",
    "_inputChild",
    "focused",
    "_nativeInput",
    "blur",
    "_closeAutocomplete",
    "ngOnInit",
    "valueChanges",
    "pipe",
    "debounceTime",
    "subscribe",
    "value",
    "emit",
    "ngAfterViewInit",
    "_watchOutsideClick",
    "ngDoCheck",
    "length",
    "onChange",
    "ngOnDestroy",
    "_outsideClickSubs",
    "unsubscribe",
    "undefined",
    "_setInternalClick",
    "onDisabledChange",
    "v",
    "_handleAddChip",
    "selectedOptions",
    "_options",
    "toArray",
    "filter",
    "option",
    "active",
    "setInactiveStyles",
    "_autocompleteTrigger",
    "activeOption",
    "trim",
    "addChip",
    "setFocusedState",
    "_openAutocomplete",
    "setValue",
    "push",
    "removeChip",
    "index",
    "removedValues",
    "splice",
    "_totalChips",
    "_focusChip",
    "_handleChipBlur",
    "_handleChipFocus",
    "_handleFocus",
    "canAddChip",
    "_focusFirstChip",
    "_inputKeydown",
    "UP_ARROW",
    "LEFT_ARROW",
    "DELETE",
    "BACKSPACE",
    "_focusLastChip",
    "RIGHT_ARROW",
    "_chipKeydown",
    "canRemoveChip",
    "DOWN_ARROW",
    "_removeInputDisplay",
    "panelOpen",
    "openPanel",
    "closePanel",
    "_chipsChildren",
    "enable",
    "disable",
    "forEach",
    "setActiveStyles",
    "merge",
    "fromEvent",
    "setTimeout",
    "contains",
    "onTouched",
    "Component",
    "providers",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "multi",
    "inputs",
    "styles",
    "template",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "ElementRef",
    "Renderer2",
    "decorators",
    "Optional",
    "Inject",
    "DOCUMENT",
    "ChangeDetectorRef",
    "ViewChild",
    "MatInput",
    "MatAutocompleteTrigger",
    "ViewChildren",
    "MatChip",
    "_chipTemplate",
    "ContentChild",
    "_autocompleteOptionTemplate",
    "MatOption",
    "Input",
    "placeholder",
    "Output",
    "tabIndex",
    "HostBinding",
    "HostListener",
    "CovalentChipsModule",
    "NgModule",
    "imports",
    "ReactiveFormsModule",
    "CommonModule",
    "MatInputModule",
    "MatIconModule",
    "MatChipsModule",
    "MatAutocompleteModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
