{
  "version": 3,
  "file": "covalent-core-notifications.umd.min.js",
  "sources": [
    "ng://@covalent/core/notifications/out/notification-count.component.ts",
    "ng://@covalent/core/notifications/out/notifications.module.ts"
  ],
  "sourcesContent": [
    "import { Component, Input, HostBinding, ChangeDetectionStrategy,\n         ViewChild, ElementRef, AfterContentInit } from '@angular/core';\n\nexport enum TdNotificationCountPositionY {\n  Top = 'top',\n  Bottom = 'bottom',\n  Center = 'center',\n}\n\nexport enum TdNotificationCountPositionX {\n  Before = 'before',\n  After = 'after',\n  Center = 'center',\n}\n\n@Component({\n  selector: 'td-notification-count',\n  styles: [`:host{position:relative;display:block;text-align:center;min-width:40px;height:40px}:host.td-notification-hidden{min-width:0}.td-notification-count{line-height:21px;width:20px;height:20px;position:absolute;font-size:10px;font-weight:600;border-radius:50%;z-index:1}.td-notification-count.td-notification-center-x{margin-left:auto;margin-right:auto;left:0;right:0}.td-notification-count.td-notification-center-y{margin-top:auto;margin-bottom:auto;top:0;bottom:0}.td-notification-count.td-notification-top{top:0}.td-notification-count.td-notification-bottom{bottom:0}.td-notification-count.td-notification-before{left:0}.td-notification-count.td-notification-after{right:0}.td-notification-count.td-notification-no-count{width:8px;height:8px}.td-notification-count.td-notification-no-count.td-notification-top{top:8px}.td-notification-count.td-notification-no-count.td-notification-bottom{bottom:8px}.td-notification-count.td-notification-no-count.td-notification-before{left:8px}.td-notification-count.td-notification-no-count.td-notification-after{right:8px}::ng-deep [dir=rtl] .td-notification-count.td-notification-before{right:0;left:auto}::ng-deep [dir=rtl] .td-notification-count.td-notification-after{left:0;right:auto}::ng-deep [dir=rtl] .td-notification-count.td-notification-no-count.td-notification-before{right:8px;left:auto}::ng-deep [dir=rtl] .td-notification-count.td-notification-no-count.td-notification-after{left:8px;right:auto}.td-notification-content,.td-notification-content ::ng-deep>*{line-height:40px}`],\n  template: `<div #content class=\"td-notification-content\">\n  <ng-content></ng-content>\n</div>\n<div *ngIf=\"show\"\n     class=\"td-notification-count mat-{{color}}\"\n     [class.td-notification-top]=\"positionY === 'top'\"\n     [class.td-notification-bottom]=\"positionY === 'bottom'\"\n     [class.td-notification-before]=\"positionX === 'before'\"\n     [class.td-notification-after]=\"positionX === 'after'\"\n     [class.td-notification-center-y]=\"positionY === 'center'\"\n     [class.td-notification-center-x]=\"positionX === 'center'\"\n     [class.td-notification-no-count]=\"noCount\">\n  {{noCount ? '' : notificationsDisplay}}\n</div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdNotificationCountComponent implements AfterContentInit {\n\n  private _notifications: number | boolean = 0;\n  private _positionY: TdNotificationCountPositionY;\n  private _positionX: TdNotificationCountPositionX;\n\n  /**\n   * Div content wrapper of `ng-content`.\n   */\n  @ViewChild('content') content: ElementRef;\n\n  /**\n   * color?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the notification tip. Defaults to \"warn\"\n   */\n  @Input() color: 'primary' | 'accent' | 'warn' = 'warn';\n\n  /**\n   * positionX?: TdNotificationCountPositionX or \"before\" | \"after\" | \"center\"\n   * Sets the X position of the notification tip.\n   * Defaults to \"after\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionX(positionX: TdNotificationCountPositionX) {\n    this._positionX = positionX;\n  }\n  get positionX(): TdNotificationCountPositionX {\n    return this._positionX;\n  }\n\n  /**\n   * positionY?: TdNotificationCountPositionY or \"top\" | \"bottom\" | \"center\"\n   * Sets the Y position of the notification tip.\n   * Defaults to \"top\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionY(positionY: TdNotificationCountPositionY) {\n    this._positionY = positionY;\n  }\n  get positionY(): TdNotificationCountPositionY {\n    return this._positionY;\n  }\n\n  /**\n   * notifications?: number | boolean\n   * Number for the notification count. Shows component only if the input is a positive number or 'true'\n   */\n  @Input()\n  set notifications(notifications: number | boolean) {\n    this._notifications = notifications;\n  }\n\n  @HostBinding('class.td-notification-hidden')\n  get hideHost(): boolean {\n    return !this.show && !this._hasContent();\n  }\n\n  /**\n   * Sets the component in its 'noCount' state if [notifications] is a boolean 'true'.\n   * Makes the notification tip show without a count.\n   */\n  get noCount(): string | boolean {\n    return this._notifications === true;\n  }\n\n  /**\n   * Notification display string when a count is available.\n   * Anything over 99 gets set as 99+\n   */\n  get notificationsDisplay(): string {\n    if (this._notifications > 99) {\n      return '99+';\n    }\n    return this._notifications.toString();\n  }\n\n  /**\n   * Shows notification tip only when [notifications] is true or a positive integer.\n   */\n  get show(): boolean {\n    return this._notifications === true || (!isNaN(<any>this._notifications) && this._notifications > 0);\n  }\n\n  /**\n   * Check if [positionX] and [positionY] have been set as inputs, else use defaults depending on component content.\n   */\n  ngAfterContentInit(): void {\n    if (!this._positionX) {\n      this.positionX = this._hasContent() ? TdNotificationCountPositionX.After : TdNotificationCountPositionX.Center;\n    }\n    if (!this._positionY) {\n      this.positionY = this._hasContent() ? TdNotificationCountPositionY.Top : TdNotificationCountPositionY.Center;\n    }\n  }\n\n  /**\n   * Method to check if element has any kind of content (elements or text)\n   */\n  private _hasContent(): boolean {\n    if (this.content) {\n      let contentElement: HTMLElement = this.content.nativeElement;\n      return contentElement && (contentElement.children.length > 0 || !!contentElement.textContent.trim());\n    }\n    return false;\n  }\n\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdNotificationCountComponent } from './notification-count.component';\n\nconst TD_NOTIFICATIONS: Type<any>[] = [\n  TdNotificationCountComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_NOTIFICATIONS,\n  ],\n  exports: [\n    TD_NOTIFICATIONS,\n  ],\n})\nexport class CovalentNotificationsModule {\n\n}\n"
  ],
  "names": [
    "Top",
    "Bottom",
    "Center",
    "Before",
    "After",
    "TdNotificationCountComponent",
    "this",
    "_notifications",
    "color",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "_positionX",
    "set",
    "positionX",
    "_positionY",
    "positionY",
    "notifications",
    "show",
    "_hasContent",
    "toString",
    "isNaN",
    "ngAfterContentInit",
    "TdNotificationCountPositionX",
    "TdNotificationCountPositionY",
    "content",
    "contentElement",
    "nativeElement",
    "children",
    "length",
    "textContent",
    "trim",
    "type",
    "Component",
    "args",
    "selector",
    "styles",
    "template",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "ViewChild",
    "Input",
    "hideHost",
    "HostBinding",
    "TD_NOTIFICATIONS",
    "CovalentNotificationsModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "oaAIAA,IAAQ,MACRC,OAAW,SACXC,OAAW,aAIXC,OAAW,SACXC,MAAU,QACVF,OAAW,UAsBXG,EAAA,wBAEAC,KAAAC,eAA6C,EAa7CD,KAAAE,MAAkD,cAQlDC,OAAAC,eAAML,EAANM,UAAA,YAAA,CAGAC,IAAE,WACE,OAAON,KAAKO,YAJhBC,IAAA,SAAgBC,GACZT,KAAKO,WAAaE,mCAYtBN,OAAAC,eAAML,EAANM,UAAA,YAAA,CAGAC,IAAE,WACE,OAAON,KAAKU,YAJhBF,IAAA,SAAgBG,GACZX,KAAKU,WAAaC,mCAWtBR,OAAAC,eAAML,EAANM,UAAA,gBAAA,CAAAG,IAAA,SAAoBI,GAChBZ,KAAKC,eAAiBW,mCAI1BT,OAAAC,eAAML,EAANM,UAAA,WAAA,CAAAC,IAAA,WACI,OAAQN,KAAKa,OAASb,KAAKc,+CAO7BX,OAAFC,eAAML,EAANM,UAAA,UAAA,CAAAC,IAAE,WACE,OAA+B,IAAxBN,KAAKC,gDAOdE,OAAFC,eAAML,EAANM,UAAA,uBAAA,CAAAC,IAAE,WACE,OAA0B,GAAtBN,KAAKC,eACA,MAEFD,KAAKC,eAAec,4CAM7BZ,OAAFC,eAAML,EAANM,UAAA,OAAA,CAAAC,IAAE,WACE,OAA+B,IAAxBN,KAAKC,iBAA6Be,MAAWhB,KAAmB,iBAA2B,EAAtBA,KAAKC,gDAMnFF,EAAFM,UAAAY,mBAAE,WACOjB,KAAKO,aACRP,KAAKS,UAAYT,KAAKc,cAAgBI,EAA6BpB,MAAQoB,EAA6BtB,QAErGI,KAAKU,aACRV,KAAKW,UAAYX,KAAKc,cAAgBK,EAA6BzB,IAAMyB,EAA6BvB,SAOlGG,EAAVM,UAAAS,YAAU,WACN,GAAId,KAAKoB,QAAS,CAChB,IAAIC,EAA8BrB,KAAKoB,QAAQE,cAC/C,OAAOD,IAAoD,EAAjCA,EAAeE,SAASC,UAAgBH,EAAeI,YAAYC,QAE/F,OAAO,KAvGX,iBAnBA,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,wBACVC,OAAQ,CAAC,w/CACTC,SAAU,8nBAcVC,gBAAiBC,EAAAA,wBAAwBC,mEAW3Cf,QAAA,CAAA,CAAAO,KAAGS,EAAAA,UAAHP,KAAA,CAAa,aAMb3B,MAAA,CAAA,CAAAyB,KAAGU,EAAAA,QAOH5B,UAAA,CAAA,CAAAkB,KAAGU,EAAAA,QAaH1B,UAAA,CAAA,CAAAgB,KAAGU,EAAAA,QAYHzB,cAAA,CAAA,CAAAe,KAAGU,EAAAA,QAKHC,SAAA,CAAA,CAAAX,KAAGY,EAAAA,YAAHV,KAAA,CAAe,mCCrFf,IAMMW,EAAgC,CACpCzC,GAcF0C,EAAA,2BAXA,CAAAd,KAACe,EAAAA,SAADb,KAAA,CAAU,CACRc,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZL,GAEFM,QAAS,CACPN"
}
